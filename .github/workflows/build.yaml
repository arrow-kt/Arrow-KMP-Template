name: "Build"

on: pull_request

env:
  JAVA_OPTS: -Xms1g -Xmx3g
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dorg.gradle.jvmargs=-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

jobs:

  build:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ matrix.os }}-gradle-

      - name: Build
        run: ./gradlew build

      - name: "Prepare test reports"
        if: ${{ always() }}
        run: |
          mkdir test-reports
          for report in `ls -d build/reports/tests`; do
            module=$(echo $report | cut -d/ -f3)
            cp -r $report test-reports/$module
          done

      - name: "Make test reports available to download"
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: test-reports
